name = "openbus-demo-dedicated-clock-assistant-mico-singlethread-debug"
version = "2.0snapshot"
subpackage_of = "openbus-cpp-assistant-mico-singlethread-debug == "..version
dependencies = {
  "openbus-cpp-mico-singlethread-debug == "..version,
  "boost == 1.51.0",
  "mico-singlethread-debug == 2.3.13-oblibs1.4snapshot",
  "openbus-idl2.0 == 2.0snapshot",
  "logger-singlethread-debug == 2.0snapshot",
  "scs-idl1.3 == 1.3snapshot",
  "scs-cpp-mico-singlethread-debug == 1.3snapshot",
  "openssl == 1.0.0j",
}
build = {
  type = "bjam",
  src = ".",
  targets = {
     "stage-assistant-demo-dedicated_clock",
  },
  variables = {
    threading = "single",
    variant = "debug",
    link = { "static" },
    ["-sBOOST_PATH"] = "%directory(boost)%",
    ["-sMICO_LIB_PATH"] = "%directory(mico-singlethread-debug)%/libs",
    ["-sMICO_INCLUDE_PATH"] = "%directory(mico-singlethread-debug)%/include",
    ["-sMICO_IDL_BIN_PATH"] = "\"%directory(mico-singlethread-debug)%/cpp %directory(mico-singlethread-debug)%/idl\"",
    ["-sSCS_IDL_PATH"] = "%directory(scs-idl1.3)%/src",
    ["-sSCS_PATH"] = "%directory(scs-cpp-mico-singlethread-debug)%",
    ["-sLOGGER_PATH"] = "%directory(logger-singlethread-debug)%",
    ["-sOPENBUS_IDL_PATH"] = "%directory(openbus-idl2.0)%/src",
    ["-sOPENSSL_LIB_PATH"] = "%directory(openssl)%",
    ["-sOPENSSL_INCLUDE_PATH"] = "%directory(openssl)%/include",
    BOOST_BUILD_PATH = "%directory(boost)%/tools/build/v2",
    BJAM_SOURCE = "%directory(boost)%/tools/build/v2/engine",
  },
  bjam_opts = {
     "-d+2",
  },
}
dev_files = {
  ["demo/assistant/dedicated_clock/idl"]    = "demo/cpp/assistant/dedicated_clock",
  ["demo/assistant/dedicated_clock/server"] = "demo/cpp/assistant/dedicated_clock",
  ["demo/assistant/dedicated_clock/client"] = "demo/cpp/assistant/dedicated_clock",
  ["demo/assistant/dedicated_clock/admin"]  = "demo/cpp/assistant/dedicated_clock",
  ["demo/assistant/dedicated_clock/*.mak"]  = "demo/cpp/assistant/dedicated_clock",
  ["demo/assistant/config.mak"]             = "demo/cpp/assistant",
}
